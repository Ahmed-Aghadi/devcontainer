{
  // For format details, see <https://aka.ms/devcontainer.json>.
  "name": "Ahmed's devcontainer",

  // You can use "image" or directly use a "build" with a
  // Dockerfile or Docker Compose file.
  // More info: <https://containers.dev/guide/dockerfile>
  // https://github.com/devcontainers/images/tree/main/src/base-alpine
  // "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
  "build": {
    "dockerfile": "Dockerfile"
  },
  // Features to add to the dev container. More info: <https://containers.dev/features>.
  // "features": {
  // // By default, alpine brings this feature, so I'll leave it commented for you to see:
  //   "ghcr.io/devcontainers/features/common-utils:2": {
  //     // "installZsh": "false"
  //     // "username": "vscode",
  //     // "userUid": "1000",
  //     // "userGid": "1000",
  //     // "upgradePackages": "true"
  //   },
  //   "ghcr.io/devcontainers/features/github-cli:1": {},
  //   // "ghcr.io/devcontainers/features/go:1": {},
  //   "ghcr.io/devcontainers/features/rust:1": {
  //     "version": "1.81"
  //   },
  //   "ghcr.io/devcontainers/features/python:1": {},
  //   "ghcr.io/devcontainers/features/node:1": {},
  //   "ghcr.io/shyim/devcontainers-features/bun:0" : {},
  //   "ghcr.io/devcontainers-contrib/features/pnpm:2.0.4": {},
  //   "ghcr.io/meaningful-ooo/devcontainer-features/fish:1": {}
  // },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      "extensions": [
        // check out https://marketplace.visualstudio.com/items?itemName=tintinweb.ethereum-security-bundle for more information
        "tintinweb.ethereum-security-bundle", // includes what is listed above ^
        "tintinweb.vscode-ethover",
        "tintinweb.vscode-solidity-language",
        "tintinweb.graphviz-interactive-preview",
        // "Olympixai.olympix",
        "trailofbits.contract-explorer",
        "tintinweb.vscode-decompiler", // dependency for panoramix
        "NomicFoundation.hardhat-solidity",
        "tintinweb.solidity-visual-auditor",
        "trailofbits.weaudit",
        "tintinweb.solidity-metrics",
        "StarkWare.cairo1",
        "tintinweb.vscode-inline-bookmarks",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "Starkware.cairo",
        // "ericglau.cairo-ls", // Cairo 0.x language server
        "JuanBlanco.solidity",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "esbenp.prettier-vscode",
        "ritwickdey.LiveServer",
        "rust-lang.rust-analyzer",
        "golang.Go"
      ],
      "settings": {
        // Killswitch for automated tasks
        "task.autoDetect": "off",
        "task.problemMatchers.autoDetect": "off",
        // Trust no one by default
        "security.workspace.trust.enabled": false,
        // Killswitch for telemetry
        "telemetry.telemetryLevel": "off",

        "terminal.integrated.defaultProfile.linux": "fish",
        "terminal.integrated.profiles.linux": {
          "fish": { "path": "/usr/bin/fish" }
        },
        // "terminal.integrated.defaultProfile.linux": "zsh",
        // "terminal.integrated.profiles.linux": { "zsh": { "path": "/usr/bin/zsh" } },
        // // @audit-q: question (unanswered), @audit-qa: question (answered, it should be followed with @audit-a), @audit-a: answer, @audit-seen: gone through the piece of code, @audit-cb: comment with blue color, @audit-cg: comment with green color, @audit-cp: comment with purple color, @audit-cr: comment with red color
        "inline-bookmarks.default.words.blue": "@audit\\-info[\\s], @todo[\\s], @note[\\s], @remind[\\s], @follow-up[\\s], @audit-q[\\s], @audit-cb[\\s]",
        "inline-bookmarks.default.words.green": "@audit\\-ok[\\s], @audit-qa[\\s], @audit-a[\\s], @audit-seen[\\s], @audit-issue-fix[\\s], @audit-cg[\\s]",
        "inline-bookmarks.default.words.purple": "@audit\\-issue[\\s], @audit-cp[\\s]",
        "inline-bookmarks.default.words.red": "@audit[\\s], @audit-cr[\\s]",

        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        // "gitlens.hovers.enabled": false,
        "cairols.sourceDir": "src",
        "cairols.cairoPath": ["src", "tests"]
      }
    }
  }

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [3000],

  // Use 'portsAttributes' to set default properties for specific forwarded ports.
  // More info: <https://containers.dev/implementors/json_reference/#port-attributes>
  // "portsAttributes": {
  // 	"3000": {
  // 		"label": "Hello Remote World",
  // 		"onAutoForward": "notify"
  // 	}
  // },

  // // Use 'postCreateCommand' to run commands after the container is created.
  // // We're using a gist, but you can also reference the raw install-tool from your repo.
  // // Unless you mount the scripts folder as
  // "postCreateCommand": "echo Welcome to your first devcontainer!",
  // // Use 'postAttachCommand' to attach a command after the container is opened.
  // "postAttachCommand": "zsh",

  // Uncomment to connect as root instead. More info: <https://aka.ms/dev-containers-non-root>.
  // "remoteUser": "root"
}
